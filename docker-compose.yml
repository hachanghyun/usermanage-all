services:
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports: ["9092:9092"]
    networks:
      - app-network
    environment:
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      ALLOW_PLAINTEXT_LISTENER: yes

  redis:
    image: redis:alpine
    container_name: redis
    ports: ["6379:6379"]
    networks:
      - app-network

  spring-boot-app:
    container_name: spring-boot-app
    build:
      context: ./usermanagement
      dockerfile: Dockerfile
    ports: ["8080:8080"]
    depends_on:
      - kafka
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=docker,generate-users
    networks:
      - app-network
    volumes:
      - ./spring-logs:/spring-logs  # 로그를 외부와 공유

  mock-kakao:
    container_name: mock-kakao
    build:
      context: ./mock-kakao
    ports:
      - "8081:8081"
    networks:
      - app-network

  mock-sms:
    container_name: mock-sms
    build:
      context: ./mock-sms
    ports:
      - "8082:8082"
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8083:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.3
    container_name: logstash
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./spring-logs:/logs        # ⬅ 로그 디렉토리 마운트
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "5044:5044"                # 필요 없다면 제거해도 됨
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  app-network:
  elk:
    driver: bridge

