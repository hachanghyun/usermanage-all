input {
  ## 도커 컨테이너 로그 (stdout/stderr)
  file {
    path => "/var/lib/docker/containers/*/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json
    tags => ["docker"]
  }

  ## Spring Boot 앱 로그
  file {
    path => "/logs/app.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^\d{4}-\d{2}-\d{2}"
      negate => true
      what => "previous"
    }
    tags => ["springboot"]
  }
}

filter {
  ## 🔍 Docker 로그: container_id 추출
  if "docker" in [tags] {
    grok {
      match => { "path" => "/var/lib/docker/containers/%{DATA:container_id}/%{GREEDYDATA}" }
    }

    ## (선택) 메시지 필드 이름 변경
    mutate {
      rename => { "log" => "message" }
    }

    ## Docker API를 통해 container_name을 가져오려면 ruby 코드 or external enrichment 필요함
    ## 여기서는 기본적으로 container_id만 포함시킴
  }

  ## 모든 로그에 공통 필드 추가
  mutate {
    add_field => {
      "ingested_at" => "%{@timestamp}"
    }
  }

  ## 로그 구조 정리
  mutate {
    remove_field => ["host", "stream", "input", "attrs"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "docker-logs-%{+YYYY.MM.dd}"
  }

  stdout { codec => rubydebug }
}
